{"version":3,"sources":["helpers.js","components/AnswersReview.jsx","components/TotalResults.jsx","components/QuizAnswers.jsx","components/QuizFilters.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["styles","paper","padding","marginTop","marginBottom","borderRadius","boxShadow","mainTitle","fontSize","submitButton","minWidth","minHeight","background","backgroundColor","question","fontWeight","lineHeight","answer","marginLeft","display","correctAnswer","color","results","margin","maxWidth","textAlign","flexDirection","difficulties","id","name","createMarkup","text","__html","AnswersReview","answers","processedAnswers","classes","resetQuiz","Typography","variant","className","map","isCorrect","wrongAnswer","Paper","dangerouslySetInnerHTML","Check","Close","Button","onClick","size","TotalResults","currentQuizStep","setCurrentQuizStep","yourAnswers","filter","length","allAnswers","percentage","useEffect","window","scrollTo","e","QuizAnswers","quizData","useState","selectedAnswers","setSelectedAnswers","setProcessedAnswers","relatedAnswer","relatedQuestion","find","onSubmit","preventDefault","category","object","correct_answers","Object","keys","key","replace","correctAnswerValue","Grid","container","spacing","item","xs","quiz","FormControl","fullWidth","RadioGroup","value","onChange","selectedQuestion","target","doesQuestionExist","updatedAnswers","handleAnswerChange","values","FormControlLabel","label","control","Radio","type","useStyles","makeStyles","QuizFilters","categories","setCategories","setCategory","quizNumber","setQuizNumber","difficulty","setDifficulty","setQuizData","fetchQuizData","a","url","process","axios","get","data","console","log","fetchCategories","helperArr","el","subsetCategoryAndId","push","uniqueHelperArr","reduce","unique","o","some","obj","Container","InputLabel","Select","required","labelId","selectedCategory","cat","MenuItem","selectedDifficulty","diff","TextField","inputProps","min","max","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4a9937d.chunk.js","sourcesContent":["export const styles = {\n  paper: {\n    padding: \"20px\",\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    borderRadius: \"20px\",\n    boxShadow:\n      \"0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\",\n  },\n  mainTitle: {\n    fontSize: \"45px\",\n    marginBottom: \"20px\",\n  },\n  submitButton: {\n    marginTop: \"20px\",\n    borderRadius: \"999px\",\n    minWidth: \"110px\",\n    minHeight: \"50px\",\n    background: \"primary\",\n    \"&:hover\": {\n      backgroundColor: \"primary\",\n      boxShadow:\n        \"0 14px 26px -12px rgba(156, 39, 176, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(156, 39, 176, 0.2)\",\n    },\n  },\n  question: {\n    fontSize: \"24px\",\n    marginBottom: \"10px\",\n    fontWeight: \"500\",\n    lineHeight: \"35px\",\n  },\n  answer: {\n    fontSize: \"18px\",\n    marginBottom: \"10px\",\n    fontWeight: \"500\",\n    lineHeight: \"25px\",\n    marginLeft: \"10px\",\n    display: \"flex\",\n  },\n  correctAnswer: {\n    color: \"green\",\n  },\n  results: {\n    display: \"flex\",\n    margin: \"0 auto\",\n    maxWidth: \"150px\",\n    textAlign: \"center\",\n    flexDirection: \"column\",\n  },\n};\n\nexport const difficulties = [\n  { id: \"total_easy_question_count\", name: \"Easy\" },\n  { id: \"total_medium_question_count\", name: \"Medium\" },\n  { id: \"total_hard_question_count\", name: \"Hard\" },\n];\n\nexport const createMarkup = (text) => {\n  return { __html: text };\n};\n","import { Paper, Button, Typography } from \"@material-ui/core\";\nimport { Check, Close } from \"@material-ui/icons\";\nimport { createMarkup } from \"../helpers\";\n\nconst AnswersReview = ({ processedAnswers, classes, resetQuiz }) => {\n  const renderAnswers = (answers) => {\n    return answers.map(\n      ({ question, isCorrect, correctAnswer, wrongAnswer }) => (\n        <Paper key={question} className={classes.paper}>\n          <Typography variant=\"h2\" className={classes.question}>\n            <span dangerouslySetInnerHTML={createMarkup(question)} />\n          </Typography>\n\n          {isCorrect ? (\n            <Typography\n              variant=\"h2\"\n              className={`${classes.answer} ${classes.correctAnswer}`}\n            >\n              <Check />\n              <span\n                className={classes.answer}\n                dangerouslySetInnerHTML={createMarkup(correctAnswer)}\n              />\n            </Typography>\n          ) : (\n            <>\n              <Typography\n                variant=\"h3\"\n                color=\"secondary\"\n                className={classes.answer}\n              >\n                <Close />\n                <span\n                  className={classes.answer}\n                  dangerouslySetInnerHTML={createMarkup(wrongAnswer)}\n                />\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                className={`${classes.answer} ${classes.correctAnswer}`}\n              >\n                <Check />\n                <span\n                  className={classes.answer}\n                  dangerouslySetInnerHTML={createMarkup(correctAnswer)}\n                />\n              </Typography>\n            </>\n          )}\n        </Paper>\n      )\n    );\n  };\n\n  return (\n    <>\n      <Typography variant=\"h1\" className={classes.mainTitle}>\n        Your answers:\n      </Typography>\n      {renderAnswers(processedAnswers)}\n      <Button\n        className={classes.submitButton}\n        onClick={resetQuiz}\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n      >\n        Start over\n      </Button>\n    </>\n  );\n};\n\nexport default AnswersReview;\n","import { Button, Typography } from \"@material-ui/core\";\nimport AnswersReview from \"./AnswersReview\";\nimport { useEffect } from \"react\";\n\nconst TotalResults = ({\n  classes,\n  resetQuiz,\n  currentQuizStep,\n  processedAnswers,\n  setCurrentQuizStep,\n  yourAnswers = processedAnswers.filter(({ isCorrect }) => isCorrect).length,\n  allAnswers = processedAnswers.length,\n  percentage = (100 * yourAnswers) / allAnswers,\n}) => {\n  useEffect(() => {\n    window.scrollTo(0, \"20px\");\n  }, []);\n  return currentQuizStep === \"results\" ? (\n    <div className={classes.results}>\n      <Typography variant=\"h1\" className={classes.mainTitle}>\n        Results\n      </Typography>\n      <Typography variant=\"h5\" >\n        {yourAnswers}\n        {\" \"}out of{\" \"}\n        {allAnswers}\n        {\" \"}\n      </Typography>\n      <Typography variant=\"p\">\n        {percentage +\"%\"}\n      </Typography>\n      <Button\n        onClick={(e) => {\n          setCurrentQuizStep(\"review\");\n        }}\n        className={classes.submitButton}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Review\n      </Button>{\" \"}\n      <Button\n        onClick={resetQuiz}\n        className={classes.submitButton}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Start over\n      </Button>\n    </div>\n  ) : (\n    <AnswersReview\n      classes={classes}\n      resetQuiz={resetQuiz}\n      processedAnswers={processedAnswers}\n    />\n  );\n};\n\nexport default TotalResults;\n","import {\n  Grid,\n  Paper,\n  Button,\n  Radio,\n  Typography,\n  RadioGroup,\n  FormControl,\n  FormControlLabel,\n} from \"@material-ui/core\";\n\nimport { useState, useEffect } from \"react\";\nimport { createMarkup } from \"../helpers\";\nimport TotalResults from \"./TotalResults\";\n\nconst QuizAnswers = ({\n  classes,\n  quizData,\n  resetQuiz,\n  currentQuizStep,\n  setCurrentQuizStep,\n}) => {\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [processedAnswers, setProcessedAnswers] = useState([]);\n\n  const handleResult = (e) => {\n    e.preventDefault();\n\n    const processedAnswers = selectedAnswers.map(({ answer, question }) => {\n      const relatedQuestion = quizData.find(\n        (category) => category.question === question\n      );\n\n      function getKeyByValue(object) {\n        return Object.keys(object).find(key => object[key] === \"true\");\n      }\n\n      const allAnswers = relatedQuestion.correct_answers;\n      const correctAnswer = getKeyByValue(allAnswers).replace('_correct','')\n      const correctAnswerValue = relatedQuestion.answers[correctAnswer]\n\n      if (correctAnswerValue === answer) {\n        return { correctAnswer: answer, isCorrect: true, question };\n      }\n      else {\n        return {\n          correctAnswer: correctAnswerValue,\n          wrongAnswer: answer,\n          isCorrect: false,\n          question,\n        };\n}\n      \n    });\n\n    setProcessedAnswers(processedAnswers);\n  };\n\n  const handleAnswerChange = (e, selectedQuestion) => {\n    e.preventDefault();\n    const { value } = e.target;\n\n    const doesQuestionExist =\n      selectedAnswers.length &&\n      selectedAnswers.find((answer) => answer.question === selectedQuestion);\n\n    if (doesQuestionExist && doesQuestionExist.answer) {\n      const updatedAnswers = selectedAnswers.map((answer) => {\n        if (answer.question === selectedQuestion) {\n          return { question: selectedQuestion, answer: value };\n        }\n        return answer;\n      });\n      setSelectedAnswers(updatedAnswers);\n    } else {\n      setSelectedAnswers([\n        ...selectedAnswers,\n        { question: selectedQuestion, answer: value },\n      ]);\n    }\n  };\n\n  const relatedAnswer = (question, selectedAnswers) => {\n    if (selectedAnswers && selectedAnswers.length) {\n      const relatedQuestion = selectedAnswers.find(\n        (answer) => answer.question === question\n      );\n      return (relatedQuestion && relatedQuestion.answer) || \"\";\n    }\n    return \"\";\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, \"20px\");\n  }, []);\n\n  return !processedAnswers || !processedAnswers.length ? (\n    <>\n      <Typography variant=\"h1\" className={classes.mainTitle}>\n        Answer the following questions:\n      </Typography>\n      <form onSubmit={handleResult}>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            {quizData.map((quiz) => (\n              <Paper key={quiz.question} className={classes.paper}>\n                <Typography variant=\"h5\" className={classes.question}>\n                  <span dangerouslySetInnerHTML={createMarkup(quiz.question)} />\n                </Typography>\n                <FormControl fullWidth variant=\"outlined\" >\n                  <RadioGroup\n                    aria-label=\"Select answer\"\n                    name=\"answer\"\n                    id=\"answer-radio\"\n                    value={relatedAnswer(quiz.question, selectedAnswers) || \"\"}\n                    onChange={(e) => handleAnswerChange(e, quiz.question)}\n                  >\n                    {Object.values(quiz.answers).filter(e => e !== null).map((answer) => (\n                      <FormControlLabel key={answer} label={answer} value={answer} control={<Radio />}>\n                        <span dangerouslySetInnerHTML={createMarkup(answer)} />\n                      </FormControlLabel>\n                    ))}\n                  </RadioGroup>\n                </FormControl>\n              </Paper>\n            ))}\n            <Button\n              className={classes.submitButton}\n              variant=\"contained\"\n              color=\"primary\"\n              id=\"submit\"\n              type=\"submit\"\n              size=\"large\"\n            >\n              FINISH\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  ) : (\n    <TotalResults\n      classes={classes}\n      resetQuiz={resetQuiz}\n      currentQuizStep={currentQuizStep}\n      processedAnswers={processedAnswers}\n      setCurrentQuizStep={setCurrentQuizStep}\n    />\n  );\n};\n\nexport default QuizAnswers;\n","import {\n  Grid,\n  Paper,\n  Select,\n  MenuItem,\n  TextField,\n  Container,\n  Typography,\n  InputLabel,\n  FormControl,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { styles, difficulties, createMarkup } from \"../helpers\";\nimport QuizAnswers from \"./QuizAnswers\";\n\nconst useStyles = makeStyles(() => {\n  return styles;\n});\n\nconst QuizFilters = () => {\n  const [categories, setCategories] = useState([]);\n  const [category, setCategory] = useState({ id: \"\", name: \"\" });\n\n  const [quizNumber, setQuizNumber] = useState(null);\n  const [difficulty, setDifficulty] = useState({ id: \"\", name: \"\" });\n\n  const [quizData, setQuizData] = useState([]);\n  const classes = useStyles();\n\n  const [currentQuizStep, setCurrentQuizStep] = useState(\"start\");\n\n  const fetchQuizData = async () => {\n    try {\n      let url = '';\n      category.name !== 'Random' || 'uncategorized'\n        ? url = `https://quizapi.io/api/v1/questions?apiKey=${process.env.REACT_APP_API_KEY}&category=${category.name}&difficulty=${difficulty.name}&limit=${quizNumber}`  \n        : url = `https://quizapi.io/api/v1/questions?apiKey=${process.env.REACT_APP_API_KEY}&difficulty=${difficulty.name}&limit=${quizNumber}`;\n\n      const { data } = await axios.get(url);\n      setQuizData(data);\n      setCurrentQuizStep(\"results\");\n\n    } catch (error) {\n      console.log(\"Fetch quiz error =====>>>>\", error);\n    }\n  };\n\n  const fetchCategories = async () => {\n    const { data } = await axios.get(`https://quizapi.io/api/v1/questions?apiKey=rVdLWKRMhzDn6n2k5ZlbQmMsSQS7hAjslZ624hWk`);\n    const helperArr = [];\n    \n    data.map((el) => {\n      let subsetCategoryAndId = (({ id, category }) => ({ id, category}))(el);\n\n      subsetCategoryAndId[ 'name' ] = subsetCategoryAndId[ 'category' ];\n\n      if (subsetCategoryAndId.category === ''){\n        subsetCategoryAndId.name = 'Random'\n      }\n      return helperArr.push(subsetCategoryAndId);\n    })\n\n    const uniqueHelperArr = helperArr.reduce((unique, o) => {\n      if(!unique.some(obj => obj.category === o.category)) {\n        unique.push(o);\n      }\n      return unique;\n  },[]);\n\n    setCategories(uniqueHelperArr)\n  };\n\n  useEffect(() => {\n    fetchCategories();\n    window.scrollTo(0, \"20px\");\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!quizData.length && quizNumber && category.id && difficulty) {\n      fetchQuizData();\n    }\n  };\n\n  const handleSelectChange = (e) => {\n    e.preventDefault();\n    const selectedCategory = categories.find(\n      (cat) => cat.id === e.target.value\n    );\n    setCategory(selectedCategory);\n  };\n\n  const handleDifficultyChange = (e) => {\n    e.preventDefault();\n    const selectedDifficulty = difficulties.find(\n      (diff) => diff.id === e.target.value\n    );\n    setDifficulty(selectedDifficulty);\n  };\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setQuizNumber(e.target.value);\n  };\n\n  const resetQuiz = (e) => {\n    e.preventDefault();\n    setQuizData([]);\n    setCategory(\"\");\n    setQuizNumber(\"\");\n    setDifficulty(\"\");\n    setCurrentQuizStep(\"start\");\n    window.scrollTo(0, \"20px\");\n  };\n\n  if (!categories.length) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <Paper className={classes.paper}>\n        {currentQuizStep === \"start\" ? (\n          <>\n            <Typography variant=\"h1\" className={classes.mainTitle}>\n              Test your skills:\n            </Typography>\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={4}>\n                <Grid item xs={12}>\n                  <FormControl fullWidth variant=\"outlined\">\n                    <InputLabel id=\"category-select-label\">\n                      Select a category:\n                    </InputLabel>\n                    <Select\n                      required\n                      name=\"category\"\n                      value={category.id || \"\"}\n                      id=\"category-select\"\n                      label=\"Select a category\"\n                      labelId=\"category-select-label\"\n                      onChange={handleSelectChange}\n                    >\n                      {categories.map((category) => (\n                        <MenuItem className=\"select-menu\" key={category.id} value={category.id}>\n                          <span\n                            dangerouslySetInnerHTML={createMarkup(\n                              category.name\n                            )}\n                          />\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControl fullWidth variant=\"outlined\">\n                    <InputLabel id=\"difficulty-select-label\">\n                      Select a level of difficulty:\n                    </InputLabel>\n                    <Select\n                      required\n                      name=\"difficulty\"\n                      value={difficulty.id || \"\"}\n                      id=\"difficulty-select\"\n                      label=\"Select a level of difficulty\"\n                      labelId=\"difficulty-select-label\"\n                      onChange={handleDifficultyChange}\n                    >\n                      {difficulties.map((difficulty) => (\n                        <MenuItem key={difficulty.id} value={difficulty.id}>\n                          {difficulty.name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    inputProps={{ min: 1, max: 10 }}\n                    required\n                    fullWidth\n                    type=\"number\"\n                    id=\"quiz-number\"\n                    variant=\"outlined\"\n                    name=\"quiz-number\"\n                    label={`Number of questions from 1 to 10`}\n                    value={quizNumber || \"\"}\n                    onChange={handleChange}\n                  />\n                </Grid>\n              </Grid>\n              <Button\n              className={classes.submitButton}\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              size=\"large\"\n            >\n              START\n            </Button>\n\n            </form>\n          </>\n        ) : (\n          <QuizAnswers\n            classes={classes}\n            quizData={quizData}\n            resetQuiz={resetQuiz}\n            categories={categories}\n            currentQuizStep={currentQuizStep}\n            setCurrentQuizStep={setCurrentQuizStep}\n          />\n        )}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default QuizFilters;","import QuizFilters from \"./components/QuizFilters\";\n\nconst App = () => {\n  return <QuizFilters />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nreportWebVitals();"],"sourceRoot":""}